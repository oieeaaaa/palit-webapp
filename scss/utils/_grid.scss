/* stylelint-disable */
$max-width: 768px;

// GUIDES
$grid-guides: (
	mobile: (
		size: 375px,
		cols: 8,
		margin: 20px,
		gutter: 10px,
	),
	tablet-p: (
		size: 768px,
		cols: 12,
		margin: 30px,
		gutter: 15px,
	),
);

// mobile first
$default-guide: map-get($grid-guides, "mobile");

// get the specified guide.
@function get-guide($guide-name) {
	@return map-get($grid-guides, $guide-name);
}

// setup the grid 'at the specified screen'.
@mixin at-screen($screen) {
	@media screen and (min-width: map-get(get-guide($screen), "size")) {
		@content;
	}
}

// on tablet portrait screens
@mixin tablet-p {
	@include at-screen("tablet-p") {
		@content;
	}
}

@mixin gen-cols($screen) {
	grid-template-columns: repeat(map-get(get-guide($screen), "cols"), 1fr);
  grid-column-gap: map-get(get-guide($screen), "gutter");

	@if (map-get(get-guide($screen), "margin") > 0px) {
		padding: 0 map-get(get-guide($screen), "margin");
	}
}

.grid {
	display: grid;
	grid-template-columns: repeat(map-get($default-guide, "cols"), 1fr);
	grid-column-gap: map-get($default-guide, "gutter");
  width: 100%;
	max-width: $max-width;
	margin: 0 auto;

	@if (map-get($default-guide, "margin") > 0px) {
		padding: 0 map-get($default-guide, "margin");
	}

	@include tablet-p {
		@include gen-cols("tablet-p");
	}
}
